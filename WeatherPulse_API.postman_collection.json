{
	"info": {
		"_postman_id": "weather-pulse-api-collection",
		"name": "WeatherPulse API",
		"description": "Comprehensive Weather Data Scraping API Collection\n\nThis collection contains all the endpoints for the WeatherPulse weather scraping service built with FastAPI and BeautifulSoup.\n\nBase URL: http://localhost:8000\n\nEndpoints:\n- Root endpoint\n- Health check\n- Get weather by city\n- Search weather with location details\n- Get weather forecast\n\nMake sure your WeatherPulse API server is running on localhost:8000 before testing these requests.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Root Endpoint",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has message and version\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('message');",
							"    pm.expect(jsonData).to.have.property('version');",
							"});",
							"",
							"pm.test(\"Message contains WeatherPulse\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include('WeatherPulse');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						""
					]
				},
				"description": "Test the root endpoint to verify API is running"
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"WeatherPulse API is running!\",\n    \"version\": \"1.0.0\"\n}"
				}
			]
		},
		{
			"name": "Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has status and timestamp\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('status');",
							"    pm.expect(jsonData).to.have.property('timestamp');",
							"});",
							"",
							"pm.test(\"Status is healthy\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('healthy');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check the health status of the API"
			},
			"response": [
				{
					"name": "Healthy Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"healthy\",\n    \"timestamp\": \"2024-01-01T12:00:00.000000\"\n}"
				}
			]
		},
		{
			"name": "Get Weather - Mumbai",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 404\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
							"});",
							"",
							"if (pm.response.code === 200) {",
							"    pm.test(\"Response has required weather fields\", function () {",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData).to.have.property('city');",
							"        pm.expect(jsonData).to.have.property('current_weather');",
							"        pm.expect(jsonData).to.have.property('last_updated');",
							"        pm.expect(jsonData).to.have.property('data_source');",
							"    });",
							"    ",
							"    pm.test(\"Current weather has temperature and condition\", function () {",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData.current_weather).to.have.property('temperature');",
							"        pm.expect(jsonData.current_weather).to.have.property('condition');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/weather/Mumbai",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"weather",
						"Mumbai"
					]
				},
				"description": "Get current weather data for Mumbai"
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/weather/Mumbai",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"weather",
								"Mumbai"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"city\": \"Mumbai\",\n    \"state\": null,\n    \"country\": \"India\",\n    \"current_weather\": {\n        \"temperature\": 28.5,\n        \"temperature_fahrenheit\": 83.3,\n        \"condition\": \"Partly Cloudy\",\n        \"humidity\": 65,\n        \"pressure\": 1013.2,\n        \"wind_speed\": 15.0,\n        \"wind_direction\": \"SW\",\n        \"visibility\": 10.0,\n        \"uv_index\": 6,\n        \"air_quality\": \"Good\"\n    },\n    \"forecast\": null,\n    \"last_updated\": \"2024-01-01T12:00:00\",\n    \"data_source\": \"Bing Weather\"\n}"
				}
			]
		},
		{
			"name": "Get Weather - Delhi",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 404\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/weather/Delhi",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"weather",
						"Delhi"
					]
				},
				"description": "Get current weather data for Delhi"
			},
			"response": []
		},
		{
			"name": "Get Weather - Pune",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 404\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/weather/Pune",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"weather",
						"Pune"
					]
				},
				"description": "Get current weather data for Pune (your original query location)"
			},
			"response": []
		},
		{
			"name": "Search Weather - Advanced Location",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 404\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
							"});",
							"",
							"if (pm.response.code === 200) {",
							"    pm.test(\"Response matches search criteria\", function () {",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData).to.have.property('city');",
							"        pm.expect(jsonData).to.have.property('state');",
							"        pm.expect(jsonData).to.have.property('country');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"city\": \"Bangalore\",\n    \"state\": \"Karnataka\",\n    \"country\": \"India\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/weather/search",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"weather",
						"search"
					]
				},
				"description": "Search weather data using detailed location information"
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"city\": \"Bangalore\",\n    \"state\": \"Karnataka\",\n    \"country\": \"India\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/weather/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"weather",
								"search"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"city\": \"Bangalore\",\n    \"state\": \"Karnataka\",\n    \"country\": \"India\",\n    \"current_weather\": {\n        \"temperature\": 26.0,\n        \"temperature_fahrenheit\": 78.8,\n        \"condition\": \"Clear\",\n        \"humidity\": 55,\n        \"pressure\": 1015.0,\n        \"wind_speed\": 8.0,\n        \"wind_direction\": \"NE\",\n        \"visibility\": 12.0,\n        \"uv_index\": 7,\n        \"air_quality\": \"Good\"\n    },\n    \"forecast\": null,\n    \"last_updated\": \"2024-01-01T12:00:00\",\n    \"data_source\": \"Bing Weather\"\n}"
				}
			]
		},
		{
			"name": "Search Weather - City Only",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 422\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 422]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"city\": \"Chennai\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/weather/search",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"weather",
						"search"
					]
				},
				"description": "Search weather with only city name (minimal required data)"
			},
			"response": []
		},
		{
			"name": "Get Forecast - 7 Days",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 404\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
							"});",
							"",
							"if (pm.response.code === 200) {",
							"    pm.test(\"Response has forecast data\", function () {",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData).to.have.property('city');",
							"        pm.expect(jsonData).to.have.property('forecast');",
							"        pm.expect(jsonData.forecast).to.be.an('array');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/weather/Mumbai/forecast?days=7",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"weather",
						"Mumbai",
						"forecast"
					],
					"query": [
						{
							"key": "days",
							"value": "7"
						}
					]
				},
				"description": "Get 7-day weather forecast for Mumbai"
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/weather/Mumbai/forecast?days=7",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"weather",
								"Mumbai",
								"forecast"
							],
							"query": [
								{
									"key": "days",
									"value": "7"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"city\": \"Mumbai\",\n    \"forecast_days\": 7,\n    \"forecast\": [\n        {\n            \"date\": \"2024-01-01\",\n            \"high_temp\": 28,\n            \"low_temp\": 22,\n            \"condition\": \"Partly Cloudy\",\n            \"precipitation\": \"30%\"\n        },\n        {\n            \"date\": \"2024-01-02\",\n            \"high_temp\": 29,\n            \"low_temp\": 23,\n            \"condition\": \"Partly Cloudy\",\n            \"precipitation\": \"35%\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Get Forecast - 3 Days",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 404\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/weather/Delhi/forecast?days=3",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"weather",
						"Delhi",
						"forecast"
					],
					"query": [
						{
							"key": "days",
							"value": "3"
						}
					]
				},
				"description": "Get 3-day weather forecast for Delhi"
			},
			"response": []
		},
		{
			"name": "Invalid City Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([404, 500]);",
							"});",
							"",
							"pm.test(\"Response has error detail\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('detail');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/weather/InvalidCityName123",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"weather",
						"InvalidCityName123"
					]
				},
				"description": "Test error handling with invalid city name"
			},
			"response": []
		},
		{
			"name": "Search Weather - Invalid Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {",
							"    pm.response.to.have.status(422);",
							"});",
							"",
							"pm.test(\"Response has validation error\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('detail');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"city\": \"\",\n    \"state\": \"TestState\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/weather/search",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"weather",
						"search"
					]
				},
				"description": "Test validation error handling with empty city name"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}
